apiVersion: v1
kind: Namespace
metadata:
  name: minio

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio 
spec:
  type: NodePort
  ports:
    - name: api
      port: 9000
      targetPort: 9000
      protocol: TCP
    - name: web
      port: 9001
      targetPort: 9001
  selector:
    app: minio

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          args:
            - server
            - /data
            - --console-address
            - ":9001"
          env:
            - name: MINIO_ROOT_USER
              value: "minio"
            - name: MINIO_ROOT_PASSWORD
              value: "minio123"
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: minio-storage
              mountPath: /data
      volumes:
        - name: minio-storage
          emptyDir: {}


# If just running for a headless test, we don't need the NodePort, just port-forward port 9000
# kubectl port-forward --namespace minio svc/minio-service 9000:9000
#
# apiVersion: v1
# kind: Service
# metadata:
#   name: minio-service
#   namespace: minio
# spec:
#   selector:
#     app: minio
#   ports:
#     - protocol: TCP
#       port: 9000
#       targetPort: 9000


# minio_api_port=$(kubectl get svc minio-service -n minio -o jsonpath='{.spec.ports[?(@.name=="api")].nodePort}')
# minio_api_url="http://$(minikube ip):$minio_api_port"
# aws configure set aws_access_key_id minio --profile local-minio
# aws configure set aws_secret_access_key minio123 --profile local-minio
# aws --profile "local-minio" --endpoint-url=$minio_api_url s3api create-bucket --bucket test-bucket
# aws --profile "local-minio" --endpoint-url=$minio_api_url s3 cp test.sh s3://test-bucket/test.sh